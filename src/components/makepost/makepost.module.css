/* makepost.module.css */

/* Container for the inner popup box */
.popupInner {
    width: 500px;
    max-width: 90%;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    padding: 16px 0px;
    z-index: 1001;
    display: flex;
    flex-direction: column;
}

/* Header */
.makePostHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #ececec;
    padding: 0 12px 12px;
    margin-bottom: 12px;
}

.makePostHeader h1 {
    font-size: 18px;
    font-weight: 600;
    margin: 0;
    color: #1c1e21;
}

.makePostHeader button {
    background: transparent;
    border: none;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    color: #606770;
    transition: color 0.2s;
}

.makePostHeader button:hover {
    color: #050505;
}

/* User info */
.makePostUser {
    display: flex;
    align-items: center;
    padding: 0 12px;
    margin-bottom: 12px;
}

.makePostUser img {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    object-fit: cover;
    margin-right: 8px;
}

.makePostUser p {
    font-size: 16px;
    font-weight: 500;
    color: #1c1e21;
    margin: 0;
}

/* Textarea */
.popupInner textarea {
    box-sizing: border-box;
    /* include padding in width */
    width: 100%;
    height: 120px;
    resize: none;
    border: none;
    padding: 8px;
    font-size: 15px;
    color: #050505;
    margin: 12px 0px;
    outline: none;
}

.popupInner textarea:focus {
    box-shadow: 0 0 0 2px rgba(24, 119, 242, 0.2);
}

/* Post actions wrapper */
.postActions {
    display: flex;
    flex-direction: column;
    gap: 12px;
    padding: 0 12px;
    margin-top: 12px;
}

.postActions button[type="submit"] {
    width: 100%;
    background-color: #1877f2;
    color: #fff;
    border: none;
    border-radius: 6px;
    padding: 8px 16px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s;
}

.postActions button[type="submit"]:hover {
    background-color: #166fe5;
}

/* “Add to post” row */
.AddToPost {
    display: flex;
    justify-content: flex-end;
    align-items: center;
}

.previewThumb {
    max-width: 100px;
    max-height: 100px;
    object-fit: cover;
    border-radius: 4px;
    margin-right: 8px;
}

.AddImageButton {
    background: none;
    border: none;
    width: 20px;
    height: 20px;
    cursor: pointer;
    margin-left: 5px;
}

.AddImageButton>img {
    width: 20px;
    height: 20px;
}

/* ——— Cropper modal & controls ——— */
.cropModal {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 400px;
    max-width: 90%;
    height: 400px;
    max-height: 90%;
    transform: translate(-50%, -50%);
    background: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    display: flex;
    flex-direction: column;
    padding: 0px 0px 6px 0px;
    z-index: 1002;
}

.cropModal .reactEasyCrop_Container {
    flex: 1;
    position: relative;
}

.cropControls {
    display: flex;
    align-items: center;
    gap: 8px;
    margin-top: 8px;
}

.cropControls input[type="range"] {
    flex: 1;
}

.cropButton {
    background-color: #1877f2;
    color: #fff;
    border: none;
    border-radius: 4px;
    padding: 6px 12px;
    font-size: 14px;
    cursor: pointer;
    transition: background-color 0.2s;
}

.cropButton:hover {
    background-color: #166fe5;
}

/* container around the Cropper to clip and layer properly */
.cropContainer {
    position: relative;
    flex: 1;
    /* fill available height in the modal */
    overflow: hidden;
    /* clip the cropping viewport */
    border-top-left-radius: 8px;
    /* ← match your modal */
    border-top-right-radius: 8px;
}

/* ensure the controls sit above the Cropper canvas */
.cropControls {
    position: relative;
    z-index: 10;
    background: #fff;
    /* match modal background */
    padding: 8px 12px;
    /* give some breathing room */
    display: flex;
    align-items: center;
    gap: 8px;
}

/* (you may remove any inline styles you added earlier) */